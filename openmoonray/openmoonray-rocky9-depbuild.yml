- name: Build depenancies
  hosts: localhost
  become: true
  environment:
    PATH: "{{ ansible_env.PATH }}:/installs/cmake-3.23.1-linux-x86_64/bin"
  tasks:
    - name: Create symbolic link
      file:
        src: /source/openmoonray/building
        dest: /building
        state: link
        force: yes
        
    - name: Create directory
      file:
        path: /build
        state: directory
        mode: '0755'
        
    - name: Clone jsoncpp repository
      git:
        repo: https://github.com/open-source-parsers/jsoncpp.git
        dest: /build/jsoncpp
        version: 0.10.7
        
    - name: Create directory
      file:
        path: /build/jsoncpp/build
        state: directory
        mode: '0755'

    - name: Create JsonCpp build directory
      file:
        path: /build/jsoncpp/build
        state: directory
        mode: '0755'

    - name: Configure jsoncpp
      shell: CC=clang CXX=clang++ cmake -DCMAKE_INSTALL_PREFIX:PATH=/installs -DBUILD_SHARED_LIBS=1 -DJSONCPP_LIB_BUILD_SHARED=1 -DPYTHON_EXECUTABLE=/usr/bin/python3 ..
      args:
        chdir: /build/jsoncpp/build

    - name: Compile jsoncpp
      make:
        chdir: /build/jsoncpp/build
        target: install
 
    - name: Create libmicrohttpd build directory
      file:
        path: /build/libmicrohttpd
        state: directory
        mode: '0755' 
 
    - name: Download libmicrohttpd
      get_url:
        url: https://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.37.tar.gz
        dest: /build/libmicrohttpd/libmicrohttpd-0.9.37.tar.gz

    - name: Extract libmicrohttpd
      unarchive:
        src: /build/libmicrohttpd/libmicrohttpd-0.9.37.tar.gz
        dest: /build/libmicrohttpd
        remote_src: true
        extra_opts: [--strip-components=1]

    - name: Configure libmicrohttpd
      shell: CC=clang CXX=clang++ ./configure --prefix=/installs
      args:
        chdir: /build/libmicrohttpd

    - name: Compile libmicrohttpd
      make:
        chdir: /build/libmicrohttpd
        target: install

## Build OpenSubdiv        
    - name: Create OpenSubdiv build directory
      file:
        path: /build/OpenSubdiv
        state: directory
        mode: '0755' 
 
    - name: Clone OpenSubdiv repository
      git:
        repo: https://github.com/PixarAnimationStudios/OpenSubdiv
        dest: /build/OpenSubdiv
        
    - name: Create OpenSubdiv build directory
      file:
        path: /build/OpenSubdiv/build
        state: directory
        mode: '0755'
    ## turned off cuda and gltests
    - name: Configure OpenSubdiv
      shell: CC=clang CXX=clang++ cmake -DCMAKE_INSTALL_PREFIX:PATH=/installs -DCMAKE_BUILD_TYPE=Release -DNO_PTEX=1 -DNO_OMP=1 -DNO_TBB=1 -DNO_CUDA=0 -DNO_GLFW_X11=1 -DNO_OPENCL=1 -DNO_CLEW=1 -DNO_REGRESSION=1 -DNO_EXAMPLES=1 -DNO_TUTORIALS=1 -DNO_DOC=1 -DNO_GLTESTS=0 -DNO_MACOS_FRAMEWORK=1 -DNO_METAL=1 -DNO_TESTS=1 -DPYTHON_EXECUTABLE=/usr/bin/python3 ..
      args:
        chdir: /build/OpenSubdiv/build

    - name: Compile OpenSubdiv
      make:
        chdir: /build/OpenSubdiv/build
        target: install
        
## Build Random123        
    - name: Create Random123 build directory
      file:
        path: /build/Random123
        state: directory
        mode: '0755' 
 
    - name: Clone Random123 repository
      git:
        repo: https://github.com/DEShawResearch/random123.git
        dest: /build/random123
        version: "726a093cd9a73f3ec3c8d7a70ff10ed8efec8d13"

    - name: Install Random123 headers
      command: make install-include prefix=/installs
      args:
        chdir: /build/random123

## Build ISPC
    - name: Create ISPC build directory
      file:
        path: /build/ispc
        state: directory
        mode: '0755'
    
    - name: Download ispc
      get_url:
        url: https://github.com/ispc/ispc/releases/download/v1.14.1/ispc-v1.14.1-linux.tar.gz
        dest: /build/ispc/ispc-v1.14.1-linux.tar.gz

    - name: Extract ispc
      unarchive:
        src: /build/ispc/ispc-v1.14.1-linux.tar.gz
        dest: /build/ispc
        remote_src: true
        creates: /build/ispc/ispc-v1.14.1-linux

    - name: Install ispc
      copy:
        src: /build/ispc/ispc-v1.14.1-linux/bin/ispc
        dest: /installs/bin/ispc
        mode: '0755'
 
## Build OpenEXR
    - name: Create OpenEXR build directory
      file:
        path: /build/OpenEXR
        state: directory
        mode: '0755'

    - name: Clone OpenEXR repository
      git:
        repo: https://github.com/AcademySoftwareFoundation/openexr.git
        dest: /build/OpenEXR
        version: "8bc3741131db146ad08a5b83af9e6e48f0e94a03"

    - name: Create OpenEXR build directory
      file:
        path: /build/OpenEXR/build
        state: directory
        mode: '0755'
    
    - name: Configure OpenEXR
      shell: CC=clang CXX=clang++ cmake -DCMAKE_INSTALL_PREFIX:PATH=/installs -DBUILD_SHARED_LIBS=OFF ..
      args:
        chdir: /build/OpenEXR/build

    - name: Compile OpenEXR
      make:
        chdir: /build/OpenEXR/build
        target: install

## Build embree
    - name: Create embree build directory
      file:
        path: /build/embree
        state: directory
        mode: '0755'

    - name: Clone embree repository
      git:
        repo: https://github.com/embree/embree.git
        dest: /build/embree
        version: "69bd4c272f1ed608494f233ecfff3feec516880b"

    - name: Apply embree patch
      shell: patch -p1 < /building/embree_missing_type.patch

    - name: Create embree build directory
      file:
        path: /build/embree/build
        state: directory
        mode: '0755'
    
    - name: Configure embree
      shell: CC=clang CXX=clang++ cmake -DCMAKE_INSTALL_PREFIX:PATH=/installs -DEMBREE_ISPC_EXECUTABLE=/installs/bin/ispc -DEMBREE_TBB_ROOT=/usr -DEMBREE_IGNORE_INVALID_RAYS=ON -DEMBREE_RAY_MASK=ON -DEMBREE_MAX_ISA=AVX -DEMBREE_TUTORIALS=OFF -DBUILD_SHARED_LIBS=ON ..
      args:
        chdir: /build/embree/build

    - name: Compile embree
      make:
        chdir: /build/embree/build
        target: install

## Build OpenColorIO
    - name: Create OpenColorIO build directory
      file:
        path: /build/OpenColorIO
        state: directory
        mode: '0755'

    - name: Clone OpenColorIO repository
      git:
        repo: https://github.com/AcademySoftwareFoundation/OpenColorIO.git
        dest: /build/OpenColorIO
        version: "66b7b7d58f2ca587ae45fc71aa8bb2157145ac35"

    - name: Create OpenColorIO build directory
      file:
        path: /build/OpenColorIO/build
        state: directory
        mode: '0755'
        
    - name: Apply patches to FileRules.cpp
      lineinfile:
        path: /build/OpenColorIO/src/OpenColorIO/FileRules.cpp
        insertafter: "#include <sstream>"
        line: "#include <cstring>"
        state: present
    
    - name: Replace strlen with std::strlen in FileRules.cpp
      lineinfile:
        path: /build/OpenColorIO/src/OpenColorIO/FileRules.cpp
        regexp: 'strlen(globPattern)'
        line: 'std::strlen(globPattern)'
        state: present
    
    - name: Configure OpenColorIO
      shell: CC=clang CXX=clang++ cmake -DCMAKE_INSTALL_PREFIX:PATH=/installs -DBUILD_SHARED_LIBS=ON -DOCIO_BUILD_STATIC=OFF -DCMAKE_CXX_STANDARD=17 -DGLEW_DIR=/usr/lib64 -DOCIO_BUILD_GPU_TESTS=0 -DOCIO_BUILD_TESTS=0 ..
      args:
        chdir: /build/OpenColorIO/build

    - name: Compile OpenColorIO
      make:
        chdir: /build/OpenColorIO/build
        target: install

## Build OpenImageIO
    - name: Create OpenImageIO build directory
      file:
        path: /build/OpenImageIO
        state: directory
        mode: '0755'

    - name: Clone OpenImageIO repository
      git:
        repo: https://github.com/OpenImageIO/oiio
        dest: /build/OpenImageIO
        version: "55ebad1f77f06527b23b4fe9d0da81fe8d0ecdc8"

    - name: Create OpenImageIO build directory
      file:
        path: /build/OpenImageIO/build
        state: directory
        mode: '0755'
    
    - name: Configure OpenImageIO
      shell: CC=clang CXX=clang++ cmake -DCMAKE_CXX_STANDARD=14 -DOpenEXR_ROOT=/installs -DCMAKE_INSTALL_PREFIX:PATH=/installs -DUSE_QT=0 -DUSE_PYTHON=0 ..
      args:
        chdir: /build/OpenImageIO/build

    - name: Compile OpenImageIO
      make:
        chdir: /build/OpenImageIO/build
        target: install

## Build USD
    - name: Create USD build directory
      file:
        path: /build/USD
        state: directory
        mode: '0755'

    - name: Clone USD repository
      git:
        repo: https://github.com/PixarAnimationStudios/USD
        dest: /build/USD
        version: "0c7b9a95f155c221ff7df9270a39a52e3b23af8b"

    - name: Create USD build directory
      file:
        path: /build/USD/build
        state: directory
        mode: '0755'
    
    - name: Configure USD
      shell: CC=clang CXX=clang++ CMAKE_PREFIX_PATH=/installs:/usr/lib64/boost cmake -DPXR_ENABLE_PYTHON_SUPPORT=ON -DPXR_USE_PYTHON_3=ON -DTBB_USE_DEBUG_BUILD=OFF -DPXR_BUILD_TESTS=OFF -DPXR_BUILD_EXAMPLES=OFF -DPXR_BUILD_TUTORIALS=OFF -DPXR_BUILD_USD_TOOLS=OFF -DPXR_ENABLE_PTEX_SUPPORT=OFF -DPXR_ENABLE_OPENVDB_SUPPORT=OFF -DPXR_BUILD_USDVIEW=OFF -DBoost_NO_BOOST_CMAKE=ON -DBoost_NO_SYSTEM_PATHS=ON -DBoost_LIBRARY_DIR=/usr/lib64 -DBoost_INCLUDE_DIR=/usr/include -DPYTHON_LIBRARIES=/usr/lib64 -DPYTHON_INCLUDE_DIRS=/usr/include -DTBB_ROOT_DIR=/usr -DTBB_LIBRARIES=/usr/lib64 -DTBB_INCLUDE_DIRS=/usr/include ..
      args:
        chdir: /build/USD/build

    - name: Compile USD
      make:
        chdir: /build/USD/build
        target: install
